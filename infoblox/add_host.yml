---
- hosts: all
  serial: 1
  gather_facts: False
  pre_tasks:
    - debug: var=target_hostname
    - debug: var=infoblox_gridmaster
    - debug: var=infoblox_username
    - debug: var=infoblox_password
    - debug: var=infoblox_version
    - debug: var=vm_request_id
    - set_fact:
        target_cidr: "10.10.1.0/24"
        target_fqdn: "{{target_hostname}}.qa.example.com"
        target_netmask: "255.255.255.0"
        target_gateway: "10.10.1.254"
      when: target_hostname | search("^qa_.*")
    - set_fact:
        target_cidr: "10.10.2.0/24"
        target_fqdn: "{{target_hostname}}.test.example.com"
        target_netmask: "255.255.255.0"
        target_gateway: "10.10.2.254"
      when: target_hostname | search("^test_.*")
    - set_fact:
        target_cidr: "10.10.3.0/24"
        target_fqdn: "{{target_hostname}}.prod.example.com"
        target_netmask: "255.255.255.0"
        target_gateway: "10.10.3.254"
      when: target_hostname | search("^production_.*")
    - fail: msg="The target_hostname provided ({{target_hostname}}) did not match any of the supported patterns. 'target_fqdn' cannot be set. Exiting with an error."
      when: target_fqdn is undefined
  roles:
    # This role registers the output var which contains ip_addr
    - role: infoblox_add_host      
  post_tasks:
    - debug: var=output
    - debug: var=target_fqdn
    - debug: var=target_cidr
    - debug: var=target_netmask
    - debug: var=target_gateway
    - debug: var=vm_request_id
    - debug: var=manageiq.api_url
    - debug: var=manageiq.api_token
    - debug: var=manageiq.service
    - set_fact:
        # Build Request URI
        req_url: "{{ manageiq.api_url }}/api/requests/{{ vm_request_id }}"
    - debug: var=req_url
    - name: Update Request With New IP And Hostname Information
      uri:
        url: "{{ req_url }}"
        method: POST
        body_format: json
        body:
          action: edit
          resource:
            options:
              addr_mode: ["static", "Static"]
              ip_addr: "{{ output.ip_addr }}"
              subnet_mask: "{{ target_netmask }}"
              gateway: "{{ target_gateway }}"
              vm_name: "{{ target_fqdn }}"
              vm_target_name: "{{ target_fqdn }}"
              hostname: "{{ target_fqdn }}"
              linux_host_name: "{{ target_fqdn }}"
        validate_certs: False
        headers:
          X-Auth-Token: "{{ manageiq.api_token }}"
          Content-Type: "application/json"
        status_code: 200
      register: cfoutput
